name: Iconica Standard App CI Action
# Workflow version: 4.0.0

# https://docs.github.com/en/actions/using-workflows/reusing-workflows
on:
    workflow_call:
      inputs:
        subfolder:
          type: string
          description: 'Subfolder where the Flutter project is located'
          required: false
          default: '.'
        additional_commands:
          type: string
          description: 'Additional commands to be run after flutter pub get'
          required: false
          default: ''
        flutter_version:
          description: "Optional Flutter Version"
          required: false
          type: string
        use_test_assets:
          type: boolean
          description: 'Use test assets in Flutter tests'
          required: false
          default: false

env:
    DOTENV_BASE64: ${{ secrets.DOTENV_BASE64 }}

jobs:
    lint:
        defaults:
          run:
            working-directory: ${{ inputs.subfolder }}
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v4
            - name: Flutter install specific version
              if: inputs.flutter_version != ''
              uses: subosito/flutter-action@v2
              with:
                channel: "stable"
                cache: true
                cache-key: ${{ runner.OS }}-flutter-install-cache
                flutter-version: ${{ inputs.flutter_version }}
            - name: Flutter install stable version
              if: inputs.flutter_version == ''
              uses: subosito/flutter-action@v2
              with:
                channel: "stable"
                cache: true
                cache-key: ${{ runner.OS }}-flutter-install-cache
            - name: Project preparation
              run: flutter pub get
            - name: Run additional commands
              if: inputs.additional_commands != ''
              run: |
                  ${{ inputs.additional_commands }}
            - name: Create dotenv and .env file from GitHub Secrets
              run: | 
                if [[ -n "${DOTENV_BASE64}" ]]; then
                    echo -n "${DOTENV_BASE64}" | base64 -d > dotenv
                    echo -n "${DOTENV_BASE64}" | base64 -d > .env
                else
                    touch .env
                    touch dotenv
                fi
              env:
                DOTENV_BASE64: ${{ env.DOTENV_BASE64 }}
            - name: Dart format
              run: dart format -o none --set-exit-if-changed .
            - name: Flutter analyze
              run: flutter analyze
            - name: Flutter test
              run: |
                if ${{ inputs.use_test_assets }}; then
                  flutter test --coverage --reporter github --exclude-tags integration
                else
                  flutter test --coverage --reporter github --no-test-assets --exclude-tags integration
                fi
