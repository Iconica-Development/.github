name: "Iconica Standard Django CI Action"

# Workflow version: 1.0.0

# https://docs.github.com/en/actions/using-workflows/reusing-workflows

on:
  workflow_call:
    inputs:
      python_version:
        type: "string"
        description: "Version of Python to use"
        required: true
      poetry_version:
        type: "string"
        description: "Version of Poetry to use when installing dependencies"
        required: true
      django_settings_module:
        type: "string"
        description: "The Django settings module to use"
        required: true

env:
  SSH_PRV_KEY: "${{ secrets.SSH_PRV_KEY }}"
  SSH_KNOWN_HOSTS: "${{ vars.SSH_KNOWN_HOSTS }}"

jobs:
  ruff_lint:
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - uses: "actions/checkout@v4"
      - uses: "chartboost/ruff-action@v1"

  test:
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-python@v5"
        with:
          python-version: "${{ inputs.python_version }}"
      - uses: "shimataro/ssh-key-action@v2"
        if: "${{ env.SSH_PRV_KEY != '' }}"
        with:
          key: "${{ env.SSH_PRV_KEY }}"
          known_hosts: "${{ env.SSH_KNOWN_HOSTS }}"
          if_key_exists: "fail"
      - name: "Install poetry"
        uses: "snok/install-poetry@v1"
        with:
          version: "${{ inputs.poetry_version }}"
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: "Load cached venv"
        id: "cached-poetry-dependencies"
        uses: "actions/cache@v4"
        with:
          path: ".venv"
          key: "venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}"
      - name: "Install dependencies"
        run: "poetry install --no-root"
        if: "steps.cached-poetry-dependencies.outputs.cache-hit != 'true'"
      - name: "Install gettext"
        run: "sudo apt-get install gettext"
      - name: "Compile translations"
        env:
          DJANGO_SETTINGS_MODULE: "${{ inputs.django_settings_module }}"
        run: |
          source .venv/bin/activate
          ./manage.py compilemessages
      - name: "Run tests"
        run: |
          source .venv/bin/activate
          pytest -rxXs --cov
